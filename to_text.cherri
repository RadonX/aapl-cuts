/*
 * Converts various input types to text.
 * If the input is/has a URL, the web content will be returned instead.
 * 
 * Dependencies: [url_or_text.shortcut, Page Content.shortcut]
 */
#define noinput askfor text
#define color darkgray
#define glyph printer
#include 'action_libraries/actions.cherri'

const input_type = typeOf(ShortcutInput)

@debug_level: number
@debug_level = actionsGetNumber("debug_level")
if debug_level > 0 {
    showNotification("{input_type}: {ShortcutInput}", "", false, ShortcutInput)
}

if input_type == "Text" {
    const url_or_text_result = run("url_or_text", ShortcutInput)
    const url_or_text_type = typeOf(url_or_text_result)
    
    if url_or_text_type == "Text" {
        output(ShortcutInput)
    } else {
        const web_page_from_url_in_text = run("Page Content", url_or_text_result) // TODO: use updated shortcut
        output(web_page_from_url_in_text)
    }
} else if input_type == "URL" {
    const web_page_from_url = run("Page Content", ShortcutInput) // TODO: use updated shortcut
    output(web_page_from_url)
} else {
    if debug_level > 1 {
        showNotification("Converting {input_type} to text", input_type)
    }
    
    const text = getText(ShortcutInput)
    mustOutput(text, text)
}
